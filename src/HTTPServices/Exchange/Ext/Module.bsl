//********************************************************************************************************
Функция СтруктураОтвета(Код, Сообщение = "")

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Новый Структура("code, message", Код, Сообщение)); 
	
	Ответ = Новый HTTPСервисОтвет(200);
	
	Ответ.Заголовки.Вставить("Content-Type", "application/json");

	Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());

	Возврат Ответ;

КонецФункции
//********************************************************************************************************
Функция ПустойОбъект(Ссылка)
	
	Возврат СтрНайти(Строка(Ссылка), "Объект не найден") > 0;
	
КонецФункции
//********************************************************************************************************
Функция upload(Запрос)

	ЧтениеJSON = Новый ЧтениеJSON;
	
	ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку("UTF-8"));
	
	Данные = ПрочитатьJSON(ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	Если Данные <> Неопределено Тогда
		
		ОбъектыВЗагрузке = РегистрыСведений.Exchange_ОбъектыВЗагрузке.СоздатьМенеджерЗаписи();
	
		ОбъектыВЗагрузке.Идентификатор = Данные.Идентификатор;
	
		ОбъектыВЗагрузке.Записать(Истина);

		Дата = ПрочитатьДатуJSON(Данные.Дата, ФорматДатыJSON.ISO);
		
		ПараметрыЗагрузки = Новый Структура;
		
		ПараметрыЗагрузки.Вставить("База",					 Данные.Организация);
		
		ПараметрыЗагрузки.Вставить("ДатаНачала",			 НачалоДня(Дата));
		ПараметрыЗагрузки.Вставить("ДатаОкончания",			 КонецДня(Дата));
		
		ПараметрыЗагрузки.Вставить("Проведение",			 Ложь);
		ПараметрыЗагрузки.Вставить("ПропускатьЗагруженные",	 Ложь);
		
		МассивДокументов = Новый Массив;

		МассивДокументов.Добавить(Данные.Вид);

		ПараметрыЗагрузки.Вставить("МассивДокументов",	 МассивДокументов);
		ПараметрыЗагрузки.Вставить("МассивСправочников", Новый Массив);
		
		ОбъектыВыгрузки = Новый Массив;

		ОбъектыВыгрузки.Добавить(Новый Структура("Вид, Дата, Номер", Данные.Вид, Дата, Данные.Номер));

		Обработка = Обработки.ЗагрузкаВБухгалтерию.Создать();
		
		Обработка.Загрузить(ПараметрыЗагрузки, ОбъектыВыгрузки);
		
		ОбъектыВЗагрузке = РегистрыСведений.Exchange_ОбъектыВЗагрузке.СоздатьМенеджерЗаписи();
		
		ОбъектыВЗагрузке.Идентификатор = Данные.Идентификатор;
		
		ОбъектыВЗагрузке.Удалить();
		
	КонецЕсли;
	
	Возврат СтруктураОтвета(200);
	
КонецФункции
//********************************************************************************************************
Функция loading(ЗапросURL)

	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Exchange_ОбъектыВЗагрузке.Идентификатор КАК Идентификатор
	|ИЗ
	|	РегистрСведений.Exchange_ОбъектыВЗагрузке КАК Exchange_ОбъектыВЗагрузке
	|ГДЕ
	|	Exchange_ОбъектыВЗагрузке.Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", ЗапросURL.ПараметрыURL["uuid"]);
	
	Если Запрос.Выполнить().Пустой() Тогда
		
		Возврат СтруктураОтвета(200);
		
	КонецЕсли;
	
	Возврат СтруктураОтвета(500);
	
КонецФункции
//********************************************************************************************************
Функция check(Запрос)
	
	ЧтениеJSON = Новый ЧтениеJSON;
	
	ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку("UTF-8"));
	
	Данные = ПрочитатьJSON(ЧтениеJSON);
	
	ЧтениеJSON.Закрыть();
	
	Если Данные <> Неопределено Тогда
		
		Если Данные.Вид = "Документ" Тогда
			
			Объект = Документы[Данные.Тип].ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УникальныйИдентификатор));
			
			Если НЕ ПустойОбъект(Объект) Тогда
				
				Возврат СтруктураОтвета(200, Новый Структура("СуммаДокумента, УникальныйИдентификатор", Объект.СуммаДокумента, Строка(Объект.УникальныйИдентификатор())));
	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураОтвета(500);

КонецФункции
//********************************************************************************************************
