//*****************************************************************************
&НаСервере
Процедура ПослеОтветаНаВопросНаСервере()
	
	ОбъектыВыгрузки = Неопределено;
	
	ПараметрыЗагрузки = Новый Структура;
		
	ПараметрыЗагрузки.Вставить("База",					 База);
	
	ПараметрыЗагрузки.Вставить("ДатаНачала",			 Объект.Период.ДатаНачала);
	ПараметрыЗагрузки.Вставить("ДатаОкончания",			 Объект.Период.ДатаОкончания);
	
	ПараметрыЗагрузки.Вставить("Проведение",			 Объект.Проведение);
	ПараметрыЗагрузки.Вставить("ПропускатьЗагруженные",	 Объект.ПропускатьЗагруженные);
	
	Если Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОсновная Тогда

		МассивДокументов = Новый Массив;
		
		Для А = 0 По СписокДокументов.Количество() - 1 Цикл
			
			Если СписокДокументов.Получить(А).Пометка Тогда
				
				МассивДокументов.Добавить(СписокДокументов.Получить(А).Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
		МассивСправочников = Новый Массив;
		
		Для А = 0 По СписокСправочников.Количество() - 1 Цикл
			
			Если СписокСправочников.Получить(А).Пометка Тогда
				
				МассивСправочников.Добавить(СписокСправочников.Получить(А).Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
		ПараметрыЗагрузки.Вставить("МассивДокументов",		 МассивДокументов);
		ПараметрыЗагрузки.Вставить("МассивСправочников",	 МассивСправочников);
		
	ИначеЕсли Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаПерсональная Тогда
		
		МассивДокументов = Новый Массив;

		МассивДокументов.Добавить(ВидОбъекта);

		ПараметрыЗагрузки.Вставить("МассивДокументов",	 МассивДокументов);
		ПараметрыЗагрузки.Вставить("МассивСправочников", Новый Массив);
		
		ОбъектыВыгрузки = Новый Массив;

		Для Каждого Стр Из Объекты Цикл
			
			Если Стр.Переносить Тогда
			
				ОбъектыВыгрузки.Добавить(Новый Структура("Вид, Дата, Номер", ВидОбъекта, Стр.Дата, Стр.Номер));
			
			КонецЕсли;
			
		КонецЦикла

	КонецЕсли;
	
	РеквизитФормыВЗначение("Объект").Загрузить(ПараметрыЗагрузки, ОбъектыВыгрузки);
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ПослеОтветаНаВопросНаСервере();
		
		ПоказатьПредупреждение(, "Синхронизация обмена завершена");
		
	КонецЕсли;
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура Загрузить(Команда)
	
	ПоказатьВопрос(Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтотОбъект), "Выполнить обмен за выбранный период?", РежимДиалогаВопрос.ДаНет, 0, КодВозвратаДиалога.Нет);
	
КонецПроцедуры
//*****************************************************************************
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Объект.Период.ДатаНачала	 = НачалоДня(ТекущаяДата());
	Объект.Период.ДатаОкончания	 = КонецДня(ТекущаяДата());
	
	Элементы.База.СписокВыбора.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	Exchange_База.Наименование КАК Наименование
	|ИЗ
	|	РегистрСведений.Exchange_База КАК Exchange_База");
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Элементы.База.СписокВыбора.Добавить(Выборка.Наименование, Выборка.Наименование);
		
	КонецЦикла;
	
	База = Элементы.База.СписокВыбора.Получить(0);
	
	БазаПриИзмененииНаСервере();
	
КонецПроцедуры
//*****************************************************************************
&НаСервере
Процедура БазаПриИзмененииНаСервере()
	
	ПравилаОбмена = РеквизитФормыВЗначение("Объект").ЗагрузитьПравила(Exchange_УдаленнаяБаза.ПолучитьБазу(База));
	
	СписокДокументов.Очистить();
	
	Для А = 0 По ПравилаОбмена.Количество() - 1 Цикл
		
		Если ПравилаОбмена[А].Свойство("Документ") Тогда
			
			Для Каждого Элемент Из ПравилаОбмена[А]["Документ"] Цикл
				
				Если Элемент.Ключ = "Синоним" Тогда
					
					Для Каждого Синоним Из Элемент.Значение Цикл
						
						СписокДокументов.Добавить(Синоним.Ключ, Синоним.Значение, Ложь);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСправочников.Очистить();
	
	Для А = 0 По ПравилаОбмена.Количество() - 1 Цикл
		
		Если ПравилаОбмена[А].Свойство("Справочник") Тогда
			
			Для Каждого Элемент Из ПравилаОбмена[А]["Справочник"] Цикл
				
				Если Элемент.Ключ = "Синоним" Тогда
					
					Для Каждого Синоним Из Элемент.Значение Цикл
						
						СписокСправочников.Добавить(Синоним.Ключ, Синоним.Значение, Ложь);
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Элементы.ВидОбъекта.СписокВыбора.Очистить();
	
	Для Каждого Элемент Из СписокДокументов Цикл
		
		Элементы.ВидОбъекта.СписокВыбора.Добавить(Элемент.Значение, Элемент.Представление);
		
	КонецЦикла;
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура БазаПриИзменении(Элемент)
	
	БазаПриИзмененииНаСервере();
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура Флажки(Значение)
	
	Для Каждого Стр Из Объекты Цикл
		
		Стр.Переносить = Значение;
		
	КонецЦикла;
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Флажки(Истина);
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Флажки(Ложь);
	
КонецПроцедуры
//*****************************************************************************
&НаСервере
Процедура ВидОбъектаПриИзмененииНаСервере()
	
	Настройки = Exchange_УдаленнаяБаза.ПолучитьБазу();
	
	Если Настройки = Неопределено Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекстЗапроса = "";
	
	Если ЗначениеЗаполнено(Настройки.ПравилаВыгрузки) Тогда
		
		ЧтениеJSON = Новый ЧтениеJSON;
		
		ЧтениеJSON.УстановитьСтроку(Настройки.ПравилаВыгрузки);
		
		ПравилаВыгрузки = ПрочитатьJSON(ЧтениеJSON);
		
		ЧтениеJSON.Закрыть();
		
		Если ПравилаВыгрузки <> Неопределено Тогда
			
			Для Каждого ПравилоВыгрузки Из ПравилаВыгрузки Цикл
				
				Для Каждого Элемент Из ПравилоВыгрузки Цикл
					
					Если Элемент.Ключ = ВидОбъекта Тогда
						
						ТекстЗапроса = Элемент.Значение;

					КонецЕсли;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Структура = Новый Структура;
	
	Структура.Вставить("Параметры",		 Новый Структура("ДатаНачала, ДатаОкончания", Объект.Период.ДатаНачала, Объект.Период.ДатаОкончания));
	Структура.Вставить("ТекстЗапроса",	 ТекстЗапроса);
	
	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Структура); 
	
	HTTPЗапрос = Новый HTTPЗапрос();
	
	HTTPЗапрос.Заголовки.Вставить("Charset",		 "utf-8");
	HTTPЗапрос.Заголовки.Вставить("Content-Type",	 "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization",	 "Basic " + Base64.ВBase64(Настройки.ИмяПользователя + ":" + Настройки.Пароль));
	
	HTTPЗапрос.АдресРесурса = "/" + Настройки.Публикация + "/hs/data/query";
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть(), КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	HTTPСоединение = Новый HTTPСоединение(Настройки.Адрес, Настройки.Порт,,,, 30);
	
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния = 200 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		
		Данные = ПрочитатьJSON(ЧтениеJSON);
		
		ЧтениеJSON.Закрыть();
		
		Если Данные <> Неопределено Тогда
			
			Объекты.Очистить();
			
			Для Каждого Стр Из Данные.Message Цикл
				
				НоваяСтрока = Объекты.Добавить();
				
				НоваяСтрока.Вид				 = ВидОбъекта;
				НоваяСтрока.Дата			 = ПрочитатьДатуJSON(Стр.Дата, ФорматДатыJSON.ISO);
				НоваяСтрока.Номер			 = Стр.Номер;
				НоваяСтрока.Объект			 = Стр.Ссылка.Представление;
				НоваяСтрока.Идентификатор	 = Стр.Ссылка.УникальныйИдентификатор;
				
			КонецЦикла;
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(HTTPОтвет.ПолучитьТелоКакСтроку());
		
	КонецЕсли;
	
КонецПроцедуры
//*****************************************************************************
&НаКлиенте
Процедура ВидОбъектаПриИзменении(Элемент)
	
	ВидОбъектаПриИзмененииНаСервере();
	
КонецПроцедуры
//*****************************************************************************