//************************************************************************************************
Функция ПолучитьБазу(Наименование = Неопределено) Экспорт
	
	Структура = Новый Структура("Адрес, Порт, ИмяПользователя, Пароль, Публикация, ПравилаЗагрузки, ПравилаВыгрузки");
	
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	Exchange_База.Адрес КАК Адрес,
	|	Exchange_База.Порт КАК Порт,
	|	Exchange_База.ИмяПользователя КАК ИмяПользователя,
	|	Exchange_База.Пароль КАК Пароль,
	|	Exchange_База.Публикация КАК Публикация,
	|	Exchange_База.ПравилаЗагрузки КАК ПравилаЗагрузки,
	|	Exchange_База.ПравилаВыгрузки КАК ПравилаВыгрузки
	|ИЗ
	|	РегистрСведений.Exchange_База КАК Exchange_База";
	
	Если Наименование <> Неопределено Тогда

		ТекстЗапроса = ТекстЗапроса + Символы.ПС + " ГДЕ
		|	Exchange_База.Наименование = &Наименование";
		
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);

	Если Наименование <> Неопределено Тогда
		
		Запрос.УстановитьПараметр("Наименование", Наименование);

	КонецЕсли;

	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		ЗаполнитьЗначенияСвойств(Структура, Выборка);
		
		Возврат Структура;
	
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//************************************************************************************************
Функция ПолучитьСсылкиУдаленнойБазы(Данные) Экспорт
	
	Настройки = ПолучитьБазу();
	
	Если Настройки = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Данные); 
	
	HTTPЗапрос = Новый HTTPЗапрос();
	
	HTTPЗапрос.Заголовки.Вставить("Charset",		 "utf-8");
	HTTPЗапрос.Заголовки.Вставить("Content-Type",	 "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization",	 "Basic " + Base64.ВBase64(Настройки.ИмяПользователя + ":" + Настройки.Пароль));
	
	HTTPЗапрос.АдресРесурса = "/" + Настройки.Публикация + "/hs/data/check";
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть(), КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	HTTPСоединение = Новый HTTPСоединение(Настройки.Адрес, Настройки.Порт,,,, 30);
	
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния = 200 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		
		Ответ = ПрочитатьJSON(ЧтениеJSON);
		
		ЧтениеJSON.Закрыть();
		
		Возврат Ответ.Message;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(HTTPОтвет.ПолучитьТелоКакСтроку());
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//************************************************************************************************
Функция ПолучитьДанныеУдаленнойБазы(Данные) Экспорт
	
	Настройки = ПолучитьБазу();
	
	Если Настройки = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Данные); 
	
	HTTPЗапрос = Новый HTTPЗапрос();
	
	HTTPЗапрос.Заголовки.Вставить("Charset",		 "utf-8");
	HTTPЗапрос.Заголовки.Вставить("Content-Type",	 "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization",	 "Basic " + Base64.ВBase64(Настройки.ИмяПользователя + ":" + Настройки.Пароль));
	
	HTTPЗапрос.АдресРесурса = "/" + Настройки.Публикация + "/hs/data/check_document";
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть(), КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	HTTPСоединение = Новый HTTPСоединение(Настройки.Адрес, Настройки.Порт,,,, 30);
	
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния = 200 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		
		Ответ = ПрочитатьJSON(ЧтениеJSON);
		
		ЧтениеJSON.Закрыть();
		
		Возврат Ответ.Message;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(HTTPОтвет.ПолучитьТелоКакСтроку());
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции
//************************************************************************************************
Функция ПолучитьДокумент(Данные, Ссылка)
	
	УникальныйИдентификатор = Строка(Ссылка.УникальныйИдентификатор());
	
	Для Каждого Элемент Из Данные Цикл
		
		Если (Элемент.УникальныйИдентификатор = УникальныйИдентификатор) Тогда 
			//ИЛИ (Элемент.Номер = Ссылка.Номер И НачалоДня(ПрочитатьДатуJSON(Элемент.Дата, ФорматДатыJSON.ISO)) = НачалоДня(Ссылка.Дата)) Тогда
			//И (Элемент.Номер = Ссылка.Номер И НачалоДня(ПрочитатьДатуJSON(Элемент.Дата, ФорматДатыJSON.ISO)) = НачалоДня(Ссылка.Дата)) Тогда
			
			Возврат Элемент;
		
		КонецЕсли;

	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
//************************************************************************************************
Функция ПроверитьДокументы(Строки, Виды) Экспорт
	
	Массив = Новый Массив;
	
	Для Каждого Вид Из Виды Цикл
		
		МассивВидов = Новый Массив;
		
		Для Каждого Стр Из Строки Цикл
			
			ТекущийДокумент = Стр.Значение.Данные.Ссылка; 
			
			Если НЕ ТекущийДокумент.ПометкаУдаления Тогда
			
				МассивВидов.Добавить(Новый Структура("Номер, Дата, УникальныйИдентификатор", ТекущийДокумент.Номер, НачалоДня(ТекущийДокумент.Дата), Строка(ТекущийДокумент.УникальныйИдентификатор())));
			
			КонецЕсли;
			
		КонецЦикла;
		
		Массив.Добавить(Новый Структура("Вид, Данные", Вид.Ключ, МассивВидов));
		
	КонецЦикла;
	
	Данные = ПолучитьСсылкиУдаленнойБазы(Массив);
	
	Если Данные <> Неопределено Тогда
		
		Для Каждого Стр Из Строки Цикл
			
			ТекущийДокумент = Стр.Значение.Данные.Ссылка; 
			
			Цвет = WebЦвета.Белый;
			
			ДанныеДокумента = ПолучитьДокумент(Данные, ТекущийДокумент);
			
			Если ДанныеДокумента <> Неопределено Тогда
				
				Если ДанныеДокумента.СуммаДокумента = ТекущийДокумент.СуммаДокумента Тогда

					Цвет = ?(ТекущийДокумент.Проведен, WebЦвета.СветлоЗеленый, WebЦвета.СветлоЖелтый);
					
				ИначеЕсли ДанныеДокумента.СуммаДокумента <> ТекущийДокумент.СуммаДокумента Тогда
					
					Цвет = WebЦвета.Оранжевый; 

				КонецЕсли;
				
				Стр.Значение.Данные.ПредставлениеДокумента = ДанныеДокумента.Представление; 
				
			КонецЕсли;	
			
			Для Каждого Оформление Из Стр.Значение.Оформление Цикл
				
				Оформление.Значение.УстановитьЗначениеПараметра("ЦветФона", Цвет);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецФункции
//************************************************************************************************
Функция ПроверкаДокумента(Ссылка, Виды) Экспорт
	
	Массив = Новый Массив;
	
	Для Каждого Вид Из Виды Цикл

		Массив.Добавить(Вид.Ключ);

	КонецЦикла;

	Возврат ПолучитьДанныеУдаленнойБазы(Новый Структура("Виды, Данные", Массив, Новый Структура("Номер, Дата, УникальныйИдентификатор", Ссылка.Номер, НачалоДня(Ссылка.Дата), Строка(Ссылка.УникальныйИдентификатор()))));

КонецФункции
//************************************************************************************************
Функция ПолучитьСсылку(Ссылка, Виды) Экспорт
	
	Массив = Новый Массив;
	
	Для Каждого Вид Из Виды Цикл

		Массив.Добавить(Вид.Ключ);

	КонецЦикла;

	Данные = Новый Структура("Виды, Данные", Массив, Новый Структура("Номер, Дата, УникальныйИдентификатор", Ссылка.Номер, НачалоДня(Ссылка.Дата), Строка(Ссылка.УникальныйИдентификатор())));
	
	Настройки = ПолучитьБазу();
	
	Если Настройки = Неопределено Тогда
		
		Возврат Неопределено;
		
	КонецЕсли;

	ЗаписьJSON = Новый ЗаписьJSON;
	
	ЗаписьJSON.УстановитьСтроку(Новый ПараметрыЗаписиJSON(, Символы.Таб));
	
	ЗаписатьJSON(ЗаписьJSON, Данные); 
	
	HTTPЗапрос = Новый HTTPЗапрос();
	
	HTTPЗапрос.Заголовки.Вставить("Charset",		 "utf-8");
	HTTPЗапрос.Заголовки.Вставить("Content-Type",	 "application/json");
	HTTPЗапрос.Заголовки.Вставить("Authorization",	 "Basic " + Base64.ВBase64(Настройки.ИмяПользователя + ":" + Настройки.Пароль));
	
	HTTPЗапрос.АдресРесурса = "/" + Настройки.Публикация + "/hs/data/info_document";
	
	HTTPЗапрос.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть(), КодировкаТекста.UTF8, ИспользованиеByteOrderMark.НеИспользовать);
	
	HTTPСоединение = Новый HTTPСоединение(Настройки.Адрес, Настройки.Порт,,,, 30);
	
	HTTPОтвет = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния = 200 Тогда 
		
		ЧтениеJSON = Новый ЧтениеJSON;
		
		ЧтениеJSON.УстановитьСтроку(HTTPОтвет.ПолучитьТелоКакСтроку());
		
		Ответ = ПрочитатьJSON(ЧтениеJSON);
		
		ЧтениеJSON.Закрыть();
		
		Если Ответ <> Неопределено Тогда
			
			Если ТипЗнч(Ответ.Message) = Тип("Структура") Тогда
				
				Возврат Ответ.Message.Ссылка;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(HTTPОтвет.ПолучитьТелоКакСтроку());
		
	КонецЕсли;
	
	Возврат "";
	
КонецФункции
//************************************************************************************************
